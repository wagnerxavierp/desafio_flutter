// Mocks generated by Mockito 5.3.2 from annotations
// in desafio_flutter/test/modules/github/infra/repositories/github_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:desafio_flutter/modules/github/infra/datasources/github_datasource_interface.dart'
    as _i2;
import 'package:desafio_flutter/modules/github/infra/models/result_github_container_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GithubDatasourceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockGithubDatasourceInterface extends _i1.Mock
    implements _i2.GithubDatasourceInterface {
  @override
  _i3.Future<_i4.ResultGithubContainerModel?> getRepositories(
    String? language,
    int? page,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRepositories,
          [
            language,
            page,
          ],
        ),
        returnValue: _i3.Future<_i4.ResultGithubContainerModel?>.value(),
        returnValueForMissingStub:
            _i3.Future<_i4.ResultGithubContainerModel?>.value(),
      ) as _i3.Future<_i4.ResultGithubContainerModel?>);
}
